{"ast":null,"code":"// // Add the updated App.js with added features like About, Contact, and Footer\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\n// import './App.css';\n// // About Page Component\n// function About() {\n//   return (\n//     <div>\n//       <h2>About Herbal Remedy System</h2>\n//       <p>We provide the best herbal remedies for various ailments. All our medicines are natural and carefully sourced.</p>\n//     </div>\n//   );\n// }\n// // Contact Page Component\n// function Contact() {\n//   return (\n//     <div>\n//       <h2>Contact Us</h2>\n//       <p>Email: info@herbalremedysystem.com</p>\n//       <p>Phone: +123 456 7890</p>\n//     </div>\n//   );\n// }\n// // Footer Component\n// function Footer() {\n//   return (\n//     <footer>\n//       <p>&copy; 2024 Herbal Remedy System. All rights reserved.</p>\n//     </footer>\n//   );\n// }\n// // Main App Component\n// function App() {\n//   const [username, setUsername] = useState(''); // For Sign Up and Login\n//   const [password, setPassword] = useState(''); // For Sign Up and Login\n//   const [message, setMessage] = useState('');\n//   const [medicines, setMedicines] = useState([]);\n//   const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [editMedicine, setEditMedicine] = useState(null);\n//   const [cartItems, setCartItems] = useState([]); // Updated to store cart items\n//   // State for Sign Up and Login forms\n//   const [showSignUp, setShowSignUp] = useState(false);\n//   const [showLogin, setShowLogin] = useState(false);\n//   // State to toggle the Create Medicine form\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n//   useEffect(() => {\n//     fetchMedicines();\n//     // Fetch cart items from localStorage on load\n//     loadCartFromLocalStorage();\n//   }, []);\n//   const fetchMedicines = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/medicines');\n//       setMedicines(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n//   const loadCartFromLocalStorage = () => {\n//     const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n//     setCartItems(savedCart);\n//   };\n//   const signup = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/signup', { username, password });\n//       setMessage('User created successfully');\n//       setShowSignUp(false); // Hide the sign-up form after successful sign-up\n//     } catch (error) {\n//       setMessage('Error creating user');\n//     }\n//   };\n//   const login = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/login', { username, password });\n//       setMessage('Logged in successfully');\n//       setIsLoggedIn(true);\n//       setShowLogin(false); // Hide the login form after successful login\n//     } catch (error) {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n//   const addMedicine = async (e) => {\n//     e.preventDefault();\n//     if (editMedicine) {\n//       await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n//       setMessage('Medicine updated successfully!');\n//       setEditMedicine(null);\n//     } else {\n//       await axios.post('http://localhost:5000/medicines', newMedicine);\n//       setMessage('Medicine added successfully!');\n//     }\n//     fetchMedicines();\n//     setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n//     setShowCreateForm(false); // Hide form after submission\n//   };\n//   const deleteMedicine = async (id) => {\n//     await axios.delete(`http://localhost:5000/medicines/${id}`);\n//     setMessage('Medicine deleted successfully!');\n//     fetchMedicines();\n//   };\n//   const editMedicineForm = (medicine) => {\n//     setNewMedicine(medicine);\n//     setEditMedicine(medicine);\n//     setShowCreateForm(true);  // Show the form in edit mode\n//   };\n//   // Function to handle adding a medicine to the cart\n//   const addToCart = (medicine) => {\n//     let cart = JSON.parse(localStorage.getItem('cart')) || [];\n//     // Check if the item is already in the cart\n//     const existingItem = cart.find(item => item.id === medicine.id);\n//     if (existingItem) {\n//       // If already exists, increase the quantity\n//       existingItem.quantity += 1;\n//     } else {\n//       // Add new item with a quantity of 1\n//       cart.push({ ...medicine, quantity: 1 });\n//     }\n//     localStorage.setItem('cart', JSON.stringify(cart));\n//     setCartItems(cart);\n//     setMessage('Medicine added to cart');\n//   };\n//   // Toggle the create medicine form\n//   const toggleCreateForm = () => {\n//     setShowCreateForm(!showCreateForm);\n//     setEditMedicine(null); // Reset the form for creating a new medicine\n//   };\n//   // Toggle the Sign Up form\n//   const toggleSignUpForm = () => {\n//     setShowSignUp(!showSignUp);\n//   };\n//   // Toggle the Login form\n//   const toggleLoginForm = () => {\n//     setShowLogin(!showLogin);\n//   };\n//   return (\n//     <Router>\n//       <div>\n//         <nav className=\"navbar\">\n//           <h1>Herbal Remedy System</h1>\n//           <div className=\"navbar-links\">\n//             <Link to=\"/\">Home</Link>\n//             <Link to=\"/about\">About</Link>\n//             <Link to=\"/contact\">Contact</Link>\n//             <button onClick={toggleSignUpForm}>Sign Up</button>\n//             <button onClick={toggleLoginForm}>Login</button>\n//           </div>\n//         </nav>\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <div className=\"container\">\n//                 {message && <p>{message}</p>}\n//                 {/* Toggle Create Medicine Button */}\n//                 {isLoggedIn && (\n//                   <button onClick={toggleCreateForm} className=\"create-btn\">\n//                     <span>+</span> {/* Icon for Create */}\n//                   </button>\n//                 )}\n//                 {/* Medicine Creation Form */}\n//                 {showCreateForm && (\n//                   <form onSubmit={addMedicine} className=\"medicine-form\">\n//                     <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Name\"\n//                       value={newMedicine.name}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n//                       required\n//                     />\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Image URL\"\n//                       value={newMedicine.image_url}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n//                       required\n//                     />\n//                     <textarea\n//                       placeholder=\"Description\"\n//                       value={newMedicine.description}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n//                       required\n//                     ></textarea>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Prescription\"\n//                       value={newMedicine.prescription}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n//                       required\n//                     />\n//                     <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n//                   </form>\n//                 )}\n//                 {/* Medicines List and CRUD Operations */}\n//                 {isLoggedIn && (\n//                   <div className=\"medicine-list\">\n//                     {medicines.map((medicine) => (\n//                       <div key={medicine.id} className=\"medicine-card\">\n//                         <h2>{medicine.name}</h2>\n//                         <img src={medicine.image_url} alt={medicine.name} />\n//                         <p>{medicine.description}</p>\n//                         <p>\n//                           <strong>Prescription:</strong> {medicine.prescription}\n//                         </p>\n//                         <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n//                         <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n//                         <button onClick={() => addToCart(medicine)}>Add to Cart</button>\n//                       </div>\n//                     ))}\n//                   </div>\n//                 )}\n//                 {/* Sign Up Form */}\n//                 {showSignUp && (\n//                   <form onSubmit={signup} className=\"auth-form\">\n//                     <h2>Sign Up</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Username\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                     />\n//                     <input\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                     />\n//                     <button type=\"submit\">Sign Up</button>\n//                   </form>\n//                 )}\n//                 {/* Login Form */}\n//                 {showLogin && (\n//                   <form onSubmit={login} className=\"auth-form\">\n//                     <h2>Login</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Username\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                     />\n//                     <input\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                     />\n//                     <button type=\"submit\">Login</button>\n//                   </form>\n//                 )}\n//               </div>\n//             }\n//           />\n//           <Route path=\"/about\" element={<About />} />\n//           <Route path=\"/contact\" element={<Contact />} />\n//         </Routes>\n//         <Footer />\n//       </div>\n//     </Router>\n//   );\n// }\n// export default App;\nimport React,{useState,useEffect}from'react';import axios from'axios';import{BrowserRouter as Router,Route,Link,Routes}from'react-router-dom';import'./App.css';// About Page Component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function About(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"About Herbal Remedy System\"}),/*#__PURE__*/_jsx(\"p\",{children:\"We provide the best herbal remedies for various ailments. All our medicines are natural and carefully sourced.\"})]});}// Contact Page Component\nfunction Contact(){return/*#__PURE__*/_jsxs(\"div\",{className:\"contact-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Contact Us\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Email: info@herbalremedysystem.com\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Phone: +123 456 7890\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Follow Us\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"social-media-links\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"https://facebook.com\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"img\",{src:\"path/to/facebook-icon.png\",alt:\"Facebook\"})}),/*#__PURE__*/_jsx(\"a\",{href:\"https://twitter.com\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"img\",{src:\"path/to/twitter-icon.png\",alt:\"Twitter\"})}),/*#__PURE__*/_jsx(\"a\",{href:\"https://instagram.com\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"img\",{src:\"path/to/instagram-icon.png\",alt:\"Instagram\"})}),/*#__PURE__*/_jsx(\"a\",{href:\"https://linkedin.com\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"img\",{src:\"path/to/linkedin-icon.png\",alt:\"LinkedIn\"})})]})]});}// Footer Component\nfunction Footer(){return/*#__PURE__*/_jsx(\"footer\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"\\xA9 2024 Herbal Remedy System. All rights reserved.\"})});}// Main App Component\nfunction App(){const[username,setUsername]=useState('');// For Sign Up and Login\nconst[password,setPassword]=useState('');// For Sign Up and Login\nconst[message,setMessage]=useState('');const[medicines,setMedicines]=useState([]);const[newMedicine,setNewMedicine]=useState({name:'',image_url:'',description:'',prescription:''});const[isLoggedIn,setIsLoggedIn]=useState(false);const[editMedicine,setEditMedicine]=useState(null);const[cartItems,setCartItems]=useState([]);// Updated to store cart items\n// State for Sign Up and Login forms\nconst[showSignUp,setShowSignUp]=useState(false);const[showLogin,setShowLogin]=useState(false);// State to toggle the Create Medicine form\nconst[showCreateForm,setShowCreateForm]=useState(false);useEffect(()=>{fetchMedicines();// Fetch cart items from localStorage on load\nloadCartFromLocalStorage();},[]);const fetchMedicines=async()=>{try{const response=await axios.get('http://localhost:5000/medicines');setMedicines(response.data);}catch(error){console.log(error);}};const loadCartFromLocalStorage=()=>{const savedCart=JSON.parse(localStorage.getItem('cart'))||[];setCartItems(savedCart);};const signup=async e=>{e.preventDefault();try{await axios.post('http://localhost:5000/signup',{username,password});setMessage('User created successfully');setShowSignUp(false);// Hide the sign-up form after successful sign-up\n}catch(error){setMessage('Error creating user');}};const login=async e=>{e.preventDefault();try{await axios.post('http://localhost:5000/login',{username,password});setMessage('Logged in successfully');setIsLoggedIn(true);setShowLogin(false);// Hide the login form after successful login\n}catch(error){setMessage('Invalid credentials');}};const addMedicine=async e=>{e.preventDefault();if(editMedicine){await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`,newMedicine);setMessage('Medicine updated successfully!');setEditMedicine(null);}else{await axios.post('http://localhost:5000/medicines',newMedicine);setMessage('Medicine added successfully!');}fetchMedicines();setNewMedicine({name:'',image_url:'',description:'',prescription:''});setShowCreateForm(false);// Hide form after submission\n};const deleteMedicine=async id=>{await axios.delete(`http://localhost:5000/medicines/${id}`);setMessage('Medicine deleted successfully!');fetchMedicines();};const editMedicineForm=medicine=>{setNewMedicine(medicine);setEditMedicine(medicine);setShowCreateForm(true);// Show the form in edit mode\n};// Function to handle adding a medicine to the cart\nconst addToCart=medicine=>{let cart=JSON.parse(localStorage.getItem('cart'))||[];// Check if the item is already in the cart\nconst existingItem=cart.find(item=>item.id===medicine.id);if(existingItem){// If already exists, increase the quantity\nexistingItem.quantity+=1;}else{// Add new item with a quantity of 1\ncart.push({...medicine,quantity:1});}localStorage.setItem('cart',JSON.stringify(cart));setCartItems(cart);setMessage('Medicine added to cart');};// Toggle the create medicine form\nconst toggleCreateForm=()=>{setShowCreateForm(!showCreateForm);setEditMedicine(null);// Reset the form for creating a new medicine\n};// Toggle the Sign Up form\nconst toggleSignUpForm=()=>{setShowSignUp(!showSignUp);};// Toggle the Login form\nconst toggleLoginForm=()=>{setShowLogin(!showLogin);};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"nav\",{className:\"navbar\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Herbal Remedy System\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"navbar-links\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"}),/*#__PURE__*/_jsx(Link,{to:\"/about\",children:\"About\"}),/*#__PURE__*/_jsx(Link,{to:\"/contact\",children:\"Contact\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleSignUpForm,children:\"Sign Up\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleLoginForm,children:\"Login\"})]})]}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[message&&/*#__PURE__*/_jsx(\"p\",{children:message}),isLoggedIn&&/*#__PURE__*/_jsxs(\"button\",{onClick:toggleCreateForm,className:\"create-btn\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"+\"}),\" \"]}),showCreateForm&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:addMedicine,className:\"medicine-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:editMedicine?'Edit Medicine':'Create Medicine'}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Name\",value:newMedicine.name,onChange:e=>setNewMedicine({...newMedicine,name:e.target.value}),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Image URL\",value:newMedicine.image_url,onChange:e=>setNewMedicine({...newMedicine,image_url:e.target.value}),required:true}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Description\",value:newMedicine.description,onChange:e=>setNewMedicine({...newMedicine,description:e.target.value}),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Prescription\",value:newMedicine.prescription,onChange:e=>setNewMedicine({...newMedicine,prescription:e.target.value}),required:true}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",children:[editMedicine?'Update':'Add',\" Herbs\"]})]}),isLoggedIn&&/*#__PURE__*/_jsx(\"div\",{className:\"medicine-list\",children:medicines.map(medicine=>/*#__PURE__*/_jsxs(\"div\",{className:\"medicine-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:medicine.name}),/*#__PURE__*/_jsx(\"img\",{src:medicine.image_url,alt:medicine.name}),/*#__PURE__*/_jsx(\"p\",{children:medicine.description}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Prescription:\"}),\" \",medicine.prescription]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>editMedicineForm(medicine),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteMedicine(medicine.id),children:\"Delete\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>addToCart(medicine),children:\"add to favorite\"})]},medicine.id))}),showSignUp&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:signup,className:\"auth-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Sign Up\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Sign Up\"})]}),showLogin&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:login,className:\"auth-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]})]})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{path:\"/contact\",element:/*#__PURE__*/_jsx(Contact,{})})]}),/*#__PURE__*/_jsx(Footer,{})]})});}export default App;495374;","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","Link","Routes","jsx","_jsx","jsxs","_jsxs","About","children","Contact","className","href","target","rel","src","alt","Footer","App","username","setUsername","password","setPassword","message","setMessage","medicines","setMedicines","newMedicine","setNewMedicine","name","image_url","description","prescription","isLoggedIn","setIsLoggedIn","editMedicine","setEditMedicine","cartItems","setCartItems","showSignUp","setShowSignUp","showLogin","setShowLogin","showCreateForm","setShowCreateForm","fetchMedicines","loadCartFromLocalStorage","response","get","data","error","console","log","savedCart","JSON","parse","localStorage","getItem","signup","e","preventDefault","post","login","addMedicine","put","id","deleteMedicine","delete","editMedicineForm","medicine","addToCart","cart","existingItem","find","item","quantity","push","setItem","stringify","toggleCreateForm","toggleSignUpForm","toggleLoginForm","to","onClick","path","element","onSubmit","type","placeholder","value","onChange","required","map"],"sources":["/root/development/herballrepo/frontend/src/App.js"],"sourcesContent":["// // Add the updated App.js with added features like About, Contact, and Footer\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\n// import './App.css';\n\n// // About Page Component\n// function About() {\n//   return (\n//     <div>\n//       <h2>About Herbal Remedy System</h2>\n//       <p>We provide the best herbal remedies for various ailments. All our medicines are natural and carefully sourced.</p>\n//     </div>\n//   );\n// }\n\n// // Contact Page Component\n// function Contact() {\n//   return (\n//     <div>\n//       <h2>Contact Us</h2>\n//       <p>Email: info@herbalremedysystem.com</p>\n//       <p>Phone: +123 456 7890</p>\n//     </div>\n//   );\n// }\n\n// // Footer Component\n// function Footer() {\n//   return (\n//     <footer>\n//       <p>&copy; 2024 Herbal Remedy System. All rights reserved.</p>\n//     </footer>\n//   );\n// }\n\n// // Main App Component\n// function App() {\n//   const [username, setUsername] = useState(''); // For Sign Up and Login\n//   const [password, setPassword] = useState(''); // For Sign Up and Login\n//   const [message, setMessage] = useState('');\n//   const [medicines, setMedicines] = useState([]);\n//   const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [editMedicine, setEditMedicine] = useState(null);\n//   const [cartItems, setCartItems] = useState([]); // Updated to store cart items\n\n//   // State for Sign Up and Login forms\n//   const [showSignUp, setShowSignUp] = useState(false);\n//   const [showLogin, setShowLogin] = useState(false);\n\n//   // State to toggle the Create Medicine form\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   useEffect(() => {\n//     fetchMedicines();\n//     // Fetch cart items from localStorage on load\n//     loadCartFromLocalStorage();\n//   }, []);\n\n//   const fetchMedicines = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/medicines');\n//       setMedicines(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const loadCartFromLocalStorage = () => {\n//     const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n//     setCartItems(savedCart);\n//   };\n\n//   const signup = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/signup', { username, password });\n//       setMessage('User created successfully');\n//       setShowSignUp(false); // Hide the sign-up form after successful sign-up\n//     } catch (error) {\n//       setMessage('Error creating user');\n//     }\n//   };\n\n//   const login = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/login', { username, password });\n//       setMessage('Logged in successfully');\n//       setIsLoggedIn(true);\n//       setShowLogin(false); // Hide the login form after successful login\n//     } catch (error) {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   const addMedicine = async (e) => {\n//     e.preventDefault();\n//     if (editMedicine) {\n//       await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n//       setMessage('Medicine updated successfully!');\n//       setEditMedicine(null);\n//     } else {\n//       await axios.post('http://localhost:5000/medicines', newMedicine);\n//       setMessage('Medicine added successfully!');\n//     }\n//     fetchMedicines();\n//     setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n//     setShowCreateForm(false); // Hide form after submission\n//   };\n\n//   const deleteMedicine = async (id) => {\n//     await axios.delete(`http://localhost:5000/medicines/${id}`);\n//     setMessage('Medicine deleted successfully!');\n//     fetchMedicines();\n//   };\n\n//   const editMedicineForm = (medicine) => {\n//     setNewMedicine(medicine);\n//     setEditMedicine(medicine);\n//     setShowCreateForm(true);  // Show the form in edit mode\n//   };\n\n//   // Function to handle adding a medicine to the cart\n//   const addToCart = (medicine) => {\n//     let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n//     // Check if the item is already in the cart\n//     const existingItem = cart.find(item => item.id === medicine.id);\n\n//     if (existingItem) {\n//       // If already exists, increase the quantity\n//       existingItem.quantity += 1;\n//     } else {\n//       // Add new item with a quantity of 1\n//       cart.push({ ...medicine, quantity: 1 });\n//     }\n\n//     localStorage.setItem('cart', JSON.stringify(cart));\n//     setCartItems(cart);\n//     setMessage('Medicine added to cart');\n//   };\n\n//   // Toggle the create medicine form\n//   const toggleCreateForm = () => {\n//     setShowCreateForm(!showCreateForm);\n//     setEditMedicine(null); // Reset the form for creating a new medicine\n//   };\n\n//   // Toggle the Sign Up form\n//   const toggleSignUpForm = () => {\n//     setShowSignUp(!showSignUp);\n//   };\n\n//   // Toggle the Login form\n//   const toggleLoginForm = () => {\n//     setShowLogin(!showLogin);\n//   };\n\n//   return (\n//     <Router>\n//       <div>\n//         <nav className=\"navbar\">\n//           <h1>Herbal Remedy System</h1>\n//           <div className=\"navbar-links\">\n//             <Link to=\"/\">Home</Link>\n//             <Link to=\"/about\">About</Link>\n//             <Link to=\"/contact\">Contact</Link>\n//             <button onClick={toggleSignUpForm}>Sign Up</button>\n//             <button onClick={toggleLoginForm}>Login</button>\n//           </div>\n//         </nav>\n\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <div className=\"container\">\n//                 {message && <p>{message}</p>}\n\n//                 {/* Toggle Create Medicine Button */}\n//                 {isLoggedIn && (\n//                   <button onClick={toggleCreateForm} className=\"create-btn\">\n//                     <span>+</span> {/* Icon for Create */}\n//                   </button>\n//                 )}\n\n//                 {/* Medicine Creation Form */}\n//                 {showCreateForm && (\n//                   <form onSubmit={addMedicine} className=\"medicine-form\">\n//                     <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Name\"\n//                       value={newMedicine.name}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n//                       required\n//                     />\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Image URL\"\n//                       value={newMedicine.image_url}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n//                       required\n//                     />\n//                     <textarea\n//                       placeholder=\"Description\"\n//                       value={newMedicine.description}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n//                       required\n//                     ></textarea>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Prescription\"\n//                       value={newMedicine.prescription}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n//                       required\n//                     />\n//                     <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n//                   </form>\n//                 )}\n\n//                 {/* Medicines List and CRUD Operations */}\n//                 {isLoggedIn && (\n//                   <div className=\"medicine-list\">\n//                     {medicines.map((medicine) => (\n//                       <div key={medicine.id} className=\"medicine-card\">\n//                         <h2>{medicine.name}</h2>\n//                         <img src={medicine.image_url} alt={medicine.name} />\n//                         <p>{medicine.description}</p>\n//                         <p>\n//                           <strong>Prescription:</strong> {medicine.prescription}\n//                         </p>\n//                         <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n//                         <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n//                         <button onClick={() => addToCart(medicine)}>Add to Cart</button>\n//                       </div>\n//                     ))}\n//                   </div>\n//                 )}\n\n//                 {/* Sign Up Form */}\n//                 {showSignUp && (\n//                   <form onSubmit={signup} className=\"auth-form\">\n//                     <h2>Sign Up</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Username\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                     />\n//                     <input\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                     />\n//                     <button type=\"submit\">Sign Up</button>\n//                   </form>\n//                 )}\n\n//                 {/* Login Form */}\n//                 {showLogin && (\n//                   <form onSubmit={login} className=\"auth-form\">\n//                     <h2>Login</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Username\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                     />\n//                     <input\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                     />\n//                     <button type=\"submit\">Login</button>\n//                   </form>\n//                 )}\n//               </div>\n//             }\n//           />\n\n//           <Route path=\"/about\" element={<About />} />\n//           <Route path=\"/contact\" element={<Contact />} />\n//         </Routes>\n\n//         <Footer />\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\nimport './App.css';\n\n// About Page Component\nfunction About() {\n  return (\n    <div>\n      <h2>About Herbal Remedy System</h2>\n      <p>We provide the best herbal remedies for various ailments. All our medicines are natural and carefully sourced.</p>\n    </div>\n  );\n}\n\n// Contact Page Component\nfunction Contact() {\n  return (\n    <div className=\"contact-page\">\n      <h2>Contact Us</h2>\n      <p>Email: info@herbalremedysystem.com</p>\n      <p>Phone: +123 456 7890</p>\n      \n      <h3>Follow Us</h3>\n      <div className=\"social-media-links\">\n        <a href=\"https://facebook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"path/to/facebook-icon.png\" alt=\"Facebook\" />\n        </a>\n        <a href=\"https://twitter.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"path/to/twitter-icon.png\" alt=\"Twitter\" />\n        </a>\n        <a href=\"https://instagram.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"path/to/instagram-icon.png\" alt=\"Instagram\" />\n        </a>\n        <a href=\"https://linkedin.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"path/to/linkedin-icon.png\" alt=\"LinkedIn\" />\n        </a>\n      </div>\n    </div>\n  );\n}\n\n// Footer Component\nfunction Footer() {\n  return (\n    <footer>\n      <p>&copy; 2024 Herbal Remedy System. All rights reserved.</p>\n    </footer>\n  );\n}\n\n// Main App Component\nfunction App() {\n  const [username, setUsername] = useState(''); // For Sign Up and Login\n  const [password, setPassword] = useState(''); // For Sign Up and Login\n  const [message, setMessage] = useState('');\n  const [medicines, setMedicines] = useState([]);\n  const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [editMedicine, setEditMedicine] = useState(null);\n  const [cartItems, setCartItems] = useState([]); // Updated to store cart items\n\n  // State for Sign Up and Login forms\n  const [showSignUp, setShowSignUp] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n\n  // State to toggle the Create Medicine form\n  const [showCreateForm, setShowCreateForm] = useState(false);\n\n  useEffect(() => {\n    fetchMedicines();\n    // Fetch cart items from localStorage on load\n    loadCartFromLocalStorage();\n  }, []);\n\n  const fetchMedicines = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/medicines');\n      setMedicines(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const loadCartFromLocalStorage = () => {\n    const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCartItems(savedCart);\n  };\n\n  const signup = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/signup', { username, password });\n      setMessage('User created successfully');\n      setShowSignUp(false); // Hide the sign-up form after successful sign-up\n    } catch (error) {\n      setMessage('Error creating user');\n    }\n  };\n\n  const login = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/login', { username, password });\n      setMessage('Logged in successfully');\n      setIsLoggedIn(true);\n      setShowLogin(false); // Hide the login form after successful login\n    } catch (error) {\n      setMessage('Invalid credentials');\n    }\n  };\n\n  const addMedicine = async (e) => {\n    e.preventDefault();\n    if (editMedicine) {\n      await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n      setMessage('Medicine updated successfully!');\n      setEditMedicine(null);\n    } else {\n      await axios.post('http://localhost:5000/medicines', newMedicine);\n      setMessage('Medicine added successfully!');\n    }\n    fetchMedicines();\n    setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n    setShowCreateForm(false); // Hide form after submission\n  };\n\n  const deleteMedicine = async (id) => {\n    await axios.delete(`http://localhost:5000/medicines/${id}`);\n    setMessage('Medicine deleted successfully!');\n    fetchMedicines();\n  };\n\n  const editMedicineForm = (medicine) => {\n    setNewMedicine(medicine);\n    setEditMedicine(medicine);\n    setShowCreateForm(true);  // Show the form in edit mode\n  };\n\n  // Function to handle adding a medicine to the cart\n  const addToCart = (medicine) => {\n    let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n    // Check if the item is already in the cart\n    const existingItem = cart.find(item => item.id === medicine.id);\n\n    if (existingItem) {\n      // If already exists, increase the quantity\n      existingItem.quantity += 1;\n    } else {\n      // Add new item with a quantity of 1\n      cart.push({ ...medicine, quantity: 1 });\n    }\n\n    localStorage.setItem('cart', JSON.stringify(cart));\n    setCartItems(cart);\n    setMessage('Medicine added to cart');\n  };\n\n  // Toggle the create medicine form\n  const toggleCreateForm = () => {\n    setShowCreateForm(!showCreateForm);\n    setEditMedicine(null); // Reset the form for creating a new medicine\n  };\n\n  // Toggle the Sign Up form\n  const toggleSignUpForm = () => {\n    setShowSignUp(!showSignUp);\n  };\n\n  // Toggle the Login form\n  const toggleLoginForm = () => {\n    setShowLogin(!showLogin);\n  };\n\n  return (\n    <Router>\n      <div>\n        <nav className=\"navbar\">\n          <h1>Herbal Remedy System</h1>\n          <div className=\"navbar-links\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/about\">About</Link>\n            <Link to=\"/contact\">Contact</Link>\n            <button onClick={toggleSignUpForm}>Sign Up</button>\n            <button onClick={toggleLoginForm}>Login</button>\n          </div>\n        </nav>\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <div className=\"container\">\n                {message && <p>{message}</p>}\n\n                {/* Toggle Create Medicine Button */}\n                {isLoggedIn && (\n                  <button onClick={toggleCreateForm} className=\"create-btn\">\n                    <span>+</span> {/* Icon for Create */}\n                  </button>\n                )}\n\n                {/* Medicine Creation Form */}\n                {showCreateForm && (\n                  <form onSubmit={addMedicine} className=\"medicine-form\">\n                    <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      value={newMedicine.name}\n                      onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n                      required\n                    />\n                    <input\n                      type=\"text\"\n                      placeholder=\"Image URL\"\n                      value={newMedicine.image_url}\n                      onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n                      required\n                    />\n                    <textarea\n                      placeholder=\"Description\"\n                      value={newMedicine.description}\n                      onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n                      required\n                    ></textarea>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Prescription\"\n                      value={newMedicine.prescription}\n                      onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n                      required\n                    />\n                    <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n                  </form>\n                )}\n\n                {/* Medicines List and CRUD Operations */}\n                {isLoggedIn && (\n                  <div className=\"medicine-list\">\n                    {medicines.map((medicine) => (\n                      <div key={medicine.id} className=\"medicine-card\">\n                        <h2>{medicine.name}</h2>\n                        <img src={medicine.image_url} alt={medicine.name} />\n                        <p>{medicine.description}</p>\n                        <p>\n                          <strong>Prescription:</strong> {medicine.prescription}\n                        </p>\n                        <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n                        <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n                        <button onClick={() => addToCart(medicine)}>add to favorite</button>\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n                {/* Sign Up Form */}\n                {showSignUp && (\n                  <form onSubmit={signup} className=\"auth-form\">\n                    <h2>Sign Up</h2>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Username\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                      required\n                    />\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      required\n                    />\n                    <button type=\"submit\">Sign Up</button>\n                  </form>\n                )}\n\n                {/* Login Form */}\n                {showLogin && (\n                  <form onSubmit={login} className=\"auth-form\">\n                    <h2>Login</h2>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Username\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                      required\n                    />\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      required\n                    />\n                    <button type=\"submit\">Login</button>\n                  </form>\n                )}\n              </div>\n            }\n          />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/contact\" element={<Contact />} />\n        </Routes>\n\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;495374"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}