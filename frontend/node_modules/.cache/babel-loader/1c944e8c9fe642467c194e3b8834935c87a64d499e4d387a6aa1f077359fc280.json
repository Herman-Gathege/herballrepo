{"ast":null,"code":"// // // Add the updated App.js with added features like About, Contact, and Footer\n\n// // import React, { useState, useEffect } from 'react';\n// // import axios from 'axios';\n// // import { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\n// // import './App.css';\n\n// // // About Page Component\n// // function About() {\n// //   return (\n// //     <div>\n// //       <h2>About Herbal Remedy System</h2>\n// //       <p>We provide the best herbal remedies for various ailments. All our medicines are natural and carefully sourced.</p>\n// //     </div>\n// //   );\n// // }\n\n// // // Contact Page Component\n// // function Contact() {\n// //   return (\n// //     <div>\n// //       <h2>Contact Us</h2>\n// //       <p>Email: info@herbalremedysystem.com</p>\n// //       <p>Phone: +123 456 7890</p>\n// //     </div>\n// //   );\n// // }\n\n// // // Footer Component\n// // function Footer() {\n// //   return (\n// //     <footer>\n// //       <p>&copy; 2024 Herbal Remedy System. All rights reserved.</p>\n// //     </footer>\n// //   );\n// // }\n\n// // // Main App Component\n// // function App() {\n// //   const [username, setUsername] = useState(''); // For Sign Up and Login\n// //   const [password, setPassword] = useState(''); // For Sign Up and Login\n// //   const [message, setMessage] = useState('');\n// //   const [medicines, setMedicines] = useState([]);\n// //   const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n// //   const [isLoggedIn, setIsLoggedIn] = useState(false);\n// //   const [editMedicine, setEditMedicine] = useState(null);\n// //   const [cartItems, setCartItems] = useState([]); // Updated to store cart items\n\n// //   // State for Sign Up and Login forms\n// //   const [showSignUp, setShowSignUp] = useState(false);\n// //   const [showLogin, setShowLogin] = useState(false);\n\n// //   // State to toggle the Create Medicine form\n// //   const [showCreateForm, setShowCreateForm] = useState(false);\n\n// //   useEffect(() => {\n// //     fetchMedicines();\n// //     // Fetch cart items from localStorage on load\n// //     loadCartFromLocalStorage();\n// //   }, []);\n\n// //   const fetchMedicines = async () => {\n// //     try {\n// //       const response = await axios.get('http://localhost:5000/medicines');\n// //       setMedicines(response.data);\n// //     } catch (error) {\n// //       console.log(error);\n// //     }\n// //   };\n\n// //   const loadCartFromLocalStorage = () => {\n// //     const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n// //     setCartItems(savedCart);\n// //   };\n\n// //   const signup = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       await axios.post('http://localhost:5000/signup', { username, password });\n// //       setMessage('User created successfully');\n// //       setShowSignUp(false); // Hide the sign-up form after successful sign-up\n// //     } catch (error) {\n// //       setMessage('Error creating user');\n// //     }\n// //   };\n\n// //   const login = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       await axios.post('http://localhost:5000/login', { username, password });\n// //       setMessage('Logged in successfully');\n// //       setIsLoggedIn(true);\n// //       setShowLogin(false); // Hide the login form after successful login\n// //     } catch (error) {\n// //       setMessage('Invalid credentials');\n// //     }\n// //   };\n\n// //   const addMedicine = async (e) => {\n// //     e.preventDefault();\n// //     if (editMedicine) {\n// //       await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n// //       setMessage('Medicine updated successfully!');\n// //       setEditMedicine(null);\n// //     } else {\n// //       await axios.post('http://localhost:5000/medicines', newMedicine);\n// //       setMessage('Medicine added successfully!');\n// //     }\n// //     fetchMedicines();\n// //     setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n// //     setShowCreateForm(false); // Hide form after submission\n// //   };\n\n// //   const deleteMedicine = async (id) => {\n// //     await axios.delete(`http://localhost:5000/medicines/${id}`);\n// //     setMessage('Medicine deleted successfully!');\n// //     fetchMedicines();\n// //   };\n\n// //   const editMedicineForm = (medicine) => {\n// //     setNewMedicine(medicine);\n// //     setEditMedicine(medicine);\n// //     setShowCreateForm(true);  // Show the form in edit mode\n// //   };\n\n// //   // Function to handle adding a medicine to the cart\n// //   const addToCart = (medicine) => {\n// //     let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n// //     // Check if the item is already in the cart\n// //     const existingItem = cart.find(item => item.id === medicine.id);\n\n// //     if (existingItem) {\n// //       // If already exists, increase the quantity\n// //       existingItem.quantity += 1;\n// //     } else {\n// //       // Add new item with a quantity of 1\n// //       cart.push({ ...medicine, quantity: 1 });\n// //     }\n\n// //     localStorage.setItem('cart', JSON.stringify(cart));\n// //     setCartItems(cart);\n// //     setMessage('Medicine added to cart');\n// //   };\n\n// //   // Toggle the create medicine form\n// //   const toggleCreateForm = () => {\n// //     setShowCreateForm(!showCreateForm);\n// //     setEditMedicine(null); // Reset the form for creating a new medicine\n// //   };\n\n// //   // Toggle the Sign Up form\n// //   const toggleSignUpForm = () => {\n// //     setShowSignUp(!showSignUp);\n// //   };\n\n// //   // Toggle the Login form\n// //   const toggleLoginForm = () => {\n// //     setShowLogin(!showLogin);\n// //   };\n\n// //   return (\n// //     <Router>\n// //       <div>\n// //         <nav className=\"navbar\">\n// //           <h1>Herbal Remedy System</h1>\n// //           <div className=\"navbar-links\">\n// //             <Link to=\"/\">Home</Link>\n// //             <Link to=\"/about\">About</Link>\n// //             <Link to=\"/contact\">Contact</Link>\n// //             <button onClick={toggleSignUpForm}>Sign Up</button>\n// //             <button onClick={toggleLoginForm}>Login</button>\n// //           </div>\n// //         </nav>\n\n// //         <Routes>\n// //           <Route\n// //             path=\"/\"\n// //             element={\n// //               <div className=\"container\">\n// //                 {message && <p>{message}</p>}\n\n// //                 {/* Toggle Create Medicine Button */}\n// //                 {isLoggedIn && (\n// //                   <button onClick={toggleCreateForm} className=\"create-btn\">\n// //                     <span>+</span> {/* Icon for Create */}\n// //                   </button>\n// //                 )}\n\n// //                 {/* Medicine Creation Form */}\n// //                 {showCreateForm && (\n// //                   <form onSubmit={addMedicine} className=\"medicine-form\">\n// //                     <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n// //                     <input\n// //                       type=\"text\"\n// //                       placeholder=\"Name\"\n// //                       value={newMedicine.name}\n// //                       onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n// //                       required\n// //                     />\n// //                     <input\n// //                       type=\"text\"\n// //                       placeholder=\"Image URL\"\n// //                       value={newMedicine.image_url}\n// //                       onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n// //                       required\n// //                     />\n// //                     <textarea\n// //                       placeholder=\"Description\"\n// //                       value={newMedicine.description}\n// //                       onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n// //                       required\n// //                     ></textarea>\n// //                     <input\n// //                       type=\"text\"\n// //                       placeholder=\"Prescription\"\n// //                       value={newMedicine.prescription}\n// //                       onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n// //                       required\n// //                     />\n// //                     <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n// //                   </form>\n// //                 )}\n\n// //                 {/* Medicines List and CRUD Operations */}\n// //                 {isLoggedIn && (\n// //                   <div className=\"medicine-list\">\n// //                     {medicines.map((medicine) => (\n// //                       <div key={medicine.id} className=\"medicine-card\">\n// //                         <h2>{medicine.name}</h2>\n// //                         <img src={medicine.image_url} alt={medicine.name} />\n// //                         <p>{medicine.description}</p>\n// //                         <p>\n// //                           <strong>Prescription:</strong> {medicine.prescription}\n// //                         </p>\n// //                         <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n// //                         <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n// //                         <button onClick={() => addToCart(medicine)}>Add to Cart</button>\n// //                       </div>\n// //                     ))}\n// //                   </div>\n// //                 )}\n\n// //                 {/* Sign Up Form */}\n// //                 {showSignUp && (\n// //                   <form onSubmit={signup} className=\"auth-form\">\n// //                     <h2>Sign Up</h2>\n// //                     <input\n// //                       type=\"text\"\n// //                       placeholder=\"Username\"\n// //                       value={username}\n// //                       onChange={(e) => setUsername(e.target.value)}\n// //                       required\n// //                     />\n// //                     <input\n// //                       type=\"password\"\n// //                       placeholder=\"Password\"\n// //                       value={password}\n// //                       onChange={(e) => setPassword(e.target.value)}\n// //                       required\n// //                     />\n// //                     <button type=\"submit\">Sign Up</button>\n// //                   </form>\n// //                 )}\n\n// //                 {/* Login Form */}\n// //                 {showLogin && (\n// //                   <form onSubmit={login} className=\"auth-form\">\n// //                     <h2>Login</h2>\n// //                     <input\n// //                       type=\"text\"\n// //                       placeholder=\"Username\"\n// //                       value={username}\n// //                       onChange={(e) => setUsername(e.target.value)}\n// //                       required\n// //                     />\n// //                     <input\n// //                       type=\"password\"\n// //                       placeholder=\"Password\"\n// //                       value={password}\n// //                       onChange={(e) => setPassword(e.target.value)}\n// //                       required\n// //                     />\n// //                     <button type=\"submit\">Login</button>\n// //                   </form>\n// //                 )}\n// //               </div>\n// //             }\n// //           />\n\n// //           <Route path=\"/about\" element={<About />} />\n// //           <Route path=\"/contact\" element={<Contact />} />\n// //         </Routes>\n\n// //         <Footer />\n// //       </div>\n// //     </Router>\n// //   );\n// // }\n\n// // export default App;\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\n// import './App.css';\n\n// // About Page Component\n// function About() {\n//   return (\n//     <div>\n//       <h2>About Herbal Remedy System</h2>\n//       <p>We provide the best herbal remedies for various ailments. All our medicines are natural and carefully sourced.</p>\n//     </div>\n//   );\n// }\n\n// // Contact Page Component\n// function Contact() {\n//   return (\n//     <div className=\"contact-page\">\n//       <h2>Contact Us</h2>\n//       <p>Email: info@herbalremedysystem.com</p>\n//       <p>Phone: +123 456 7890</p>\n\n//       <h3>Follow Us</h3>\n//       <div className=\"social-media-links\">\n//         <a href=\"https://facebook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n//           <img src=\"path/to/facebook-icon.png\" alt=\"Facebook\" />\n//         </a>\n//         <a href=\"https://twitter.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n//           <img src=\"path/to/twitter-icon.png\" alt=\"Twitter\" />\n//         </a>\n//         <a href=\"https://instagram.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n//           <img src=\"path/to/instagram-icon.png\" alt=\"Instagram\" />\n//         </a>\n//         <a href=\"https://linkedin.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n//           <img src=\"path/to/linkedin-icon.png\" alt=\"LinkedIn\" />\n//         </a>\n//       </div>\n//     </div>\n//   );\n// }\n\n// // Footer Component\n// function Footer() {\n//   return (\n//     <footer>\n//       <p>&copy; 2024 Herbal Remedy System. All rights reserved.</p>\n//     </footer>\n//   );\n// }\n\n// // Main App Component\n// function App() {\n//   const [username, setUsername] = useState(''); // For Sign Up and Login\n//   const [password, setPassword] = useState(''); // For Sign Up and Login\n//   const [message, setMessage] = useState('');\n//   const [medicines, setMedicines] = useState([]);\n//   const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [editMedicine, setEditMedicine] = useState(null);\n//   const [cartItems, setCartItems] = useState([]); // Updated to store cart items\n\n//   // State for Sign Up and Login forms\n//   const [showSignUp, setShowSignUp] = useState(false);\n//   const [showLogin, setShowLogin] = useState(false);\n\n//   // State to toggle the Create Medicine form\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   useEffect(() => {\n//     fetchMedicines();\n//     // Fetch cart items from localStorage on load\n//     loadCartFromLocalStorage();\n//   }, []);\n\n//   const fetchMedicines = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/medicines');\n//       setMedicines(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const loadCartFromLocalStorage = () => {\n//     const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n//     setCartItems(savedCart);\n//   };\n\n//   const signup = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/signup', { username, password });\n//       setMessage('User created successfully');\n//       setShowSignUp(false); // Hide the sign-up form after successful sign-up\n//     } catch (error) {\n//       setMessage('Error creating user');\n//     }\n//   };\n\n//   const login = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/login', { username, password });\n//       setMessage('Logged in successfully');\n//       setIsLoggedIn(true);\n//       setShowLogin(false); // Hide the login form after successful login\n//     } catch (error) {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   const addMedicine = async (e) => {\n//     e.preventDefault();\n//     if (editMedicine) {\n//       await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n//       setMessage('Medicine updated successfully!');\n//       setEditMedicine(null);\n//     } else {\n//       await axios.post('http://localhost:5000/medicines', newMedicine);\n//       setMessage('Medicine added successfully!');\n//     }\n//     fetchMedicines();\n//     setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n//     setShowCreateForm(false); // Hide form after submission\n//   };\n\n//   const deleteMedicine = async (id) => {\n//     await axios.delete(`http://localhost:5000/medicines/${id}`);\n//     setMessage('Medicine deleted successfully!');\n//     fetchMedicines();\n//   };\n\n//   const editMedicineForm = (medicine) => {\n//     setNewMedicine(medicine);\n//     setEditMedicine(medicine);\n//     setShowCreateForm(true);  // Show the form in edit mode\n//   };\n\n//   // Function to handle adding a medicine to the cart\n//   const addToCart = (medicine) => {\n//     let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n//     // Check if the item is already in the cart\n//     const existingItem = cart.find(item => item.id === medicine.id);\n\n//     if (existingItem) {\n//       // If already exists, increase the quantity\n//       existingItem.quantity += 1;\n//     } else {\n//       // Add new item with a quantity of 1\n//       cart.push({ ...medicine, quantity: 1 });\n//     }\n\n//     localStorage.setItem('cart', JSON.stringify(cart));\n//     setCartItems(cart);\n//     setMessage('Medicine added to cart');\n//   };\n\n//   // Toggle the create medicine form\n//   const toggleCreateForm = () => {\n//     setShowCreateForm(!showCreateForm);\n//     setEditMedicine(null); // Reset the form for creating a new medicine\n//   };\n\n//   // Toggle the Sign Up form\n//   const toggleSignUpForm = () => {\n//     setShowSignUp(!showSignUp);\n//   };\n\n//   // Toggle the Login form\n//   const toggleLoginForm = () => {\n//     setShowLogin(!showLogin);\n//   };\n\n//   return (\n//     <Router>\n//       <div>\n//         <nav className=\"navbar\">\n//           <h1>Herbal Remedy System</h1>\n//           <div className=\"navbar-links\">\n//             <Link to=\"/\">Home</Link>\n//             <Link to=\"/about\">About</Link>\n//             <Link to=\"/contact\">Contact</Link>\n//             <button onClick={toggleSignUpForm}>Sign Up</button>\n//             <button onClick={toggleLoginForm}>Login</button>\n//           </div>\n//         </nav>\n\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <div className=\"container\">\n//                 {message && <p>{message}</p>}\n\n//                 {/* Toggle Create Medicine Button */}\n//                 {isLoggedIn && (\n//                   <button onClick={toggleCreateForm} className=\"create-btn\">\n//                     <span>+</span> {/* Icon for Create */}\n//                   </button>\n//                 )}\n\n//                 {/* Medicine Creation Form */}\n//                 {showCreateForm && (\n//                   <form onSubmit={addMedicine} className=\"medicine-form\">\n//                     <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Name\"\n//                       value={newMedicine.name}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n//                       required\n//                     />\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Image URL\"\n//                       value={newMedicine.image_url}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n//                       required\n//                     />\n//                     <textarea\n//                       placeholder=\"Description\"\n//                       value={newMedicine.description}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n//                       required\n//                     ></textarea>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Prescription\"\n//                       value={newMedicine.prescription}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n//                       required\n//                     />\n//                     <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n//                   </form>\n//                 )}\n\n//                 {/* Medicines List and CRUD Operations */}\n//                 {isLoggedIn && (\n//                   <div className=\"medicine-list\">\n//                     {medicines.map((medicine) => (\n//                       <div key={medicine.id} className=\"medicine-card\">\n//                         <h2>{medicine.name}</h2>\n//                         <img src={medicine.image_url} alt={medicine.name} />\n//                         <p>{medicine.description}</p>\n//                         <p>\n//                           <strong>Prescription:</strong> {medicine.prescription}\n//                         </p>\n//                         <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n//                         <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n//                         <button onClick={() => addToCart(medicine)}>add to favorite</button>\n//                       </div>\n//                     ))}\n//                   </div>\n//                 )}\n\n//                 {/* Sign Up Form */}\n//                 {showSignUp && (\n//                   <form onSubmit={signup} className=\"auth-form\">\n//                     <h2>Sign Up</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Username\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                     />\n//                     <input\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                     />\n//                     <button type=\"submit\">Sign Up</button>\n//                   </form>\n//                 )}\n\n//                 {/* Login Form */}\n//                 {showLogin && (\n//                   <form onSubmit={login} className=\"auth-form\">\n//                     <h2>Login</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Username\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                     />\n//                     <input\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                     />\n//                     <button type=\"submit\">Login</button>\n//                   </form>\n//                 )}\n//               </div>\n//             }\n//           />\n//           <Route path=\"/about\" element={<About />} />\n//           <Route path=\"/contact\" element={<Contact />} />\n//         </Routes>\n\n//         <Footer />\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/root/development/herballrepo/frontend/src/App.js"],"sourcesContent":["// // // Add the updated App.js with added features like About, Contact, and Footer\n\n// // import React, { useState, useEffect } from 'react';\n// // import axios from 'axios';\n// // import { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\n// // import './App.css';\n\n// // // About Page Component\n// // function About() {\n// //   return (\n// //     <div>\n// //       <h2>About Herbal Remedy System</h2>\n// //       <p>We provide the best herbal remedies for various ailments. All our medicines are natural and carefully sourced.</p>\n// //     </div>\n// //   );\n// // }\n\n// // // Contact Page Component\n// // function Contact() {\n// //   return (\n// //     <div>\n// //       <h2>Contact Us</h2>\n// //       <p>Email: info@herbalremedysystem.com</p>\n// //       <p>Phone: +123 456 7890</p>\n// //     </div>\n// //   );\n// // }\n\n// // // Footer Component\n// // function Footer() {\n// //   return (\n// //     <footer>\n// //       <p>&copy; 2024 Herbal Remedy System. All rights reserved.</p>\n// //     </footer>\n// //   );\n// // }\n\n// // // Main App Component\n// // function App() {\n// //   const [username, setUsername] = useState(''); // For Sign Up and Login\n// //   const [password, setPassword] = useState(''); // For Sign Up and Login\n// //   const [message, setMessage] = useState('');\n// //   const [medicines, setMedicines] = useState([]);\n// //   const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n// //   const [isLoggedIn, setIsLoggedIn] = useState(false);\n// //   const [editMedicine, setEditMedicine] = useState(null);\n// //   const [cartItems, setCartItems] = useState([]); // Updated to store cart items\n\n// //   // State for Sign Up and Login forms\n// //   const [showSignUp, setShowSignUp] = useState(false);\n// //   const [showLogin, setShowLogin] = useState(false);\n\n// //   // State to toggle the Create Medicine form\n// //   const [showCreateForm, setShowCreateForm] = useState(false);\n\n// //   useEffect(() => {\n// //     fetchMedicines();\n// //     // Fetch cart items from localStorage on load\n// //     loadCartFromLocalStorage();\n// //   }, []);\n\n// //   const fetchMedicines = async () => {\n// //     try {\n// //       const response = await axios.get('http://localhost:5000/medicines');\n// //       setMedicines(response.data);\n// //     } catch (error) {\n// //       console.log(error);\n// //     }\n// //   };\n\n// //   const loadCartFromLocalStorage = () => {\n// //     const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n// //     setCartItems(savedCart);\n// //   };\n\n// //   const signup = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       await axios.post('http://localhost:5000/signup', { username, password });\n// //       setMessage('User created successfully');\n// //       setShowSignUp(false); // Hide the sign-up form after successful sign-up\n// //     } catch (error) {\n// //       setMessage('Error creating user');\n// //     }\n// //   };\n\n// //   const login = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       await axios.post('http://localhost:5000/login', { username, password });\n// //       setMessage('Logged in successfully');\n// //       setIsLoggedIn(true);\n// //       setShowLogin(false); // Hide the login form after successful login\n// //     } catch (error) {\n// //       setMessage('Invalid credentials');\n// //     }\n// //   };\n\n// //   const addMedicine = async (e) => {\n// //     e.preventDefault();\n// //     if (editMedicine) {\n// //       await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n// //       setMessage('Medicine updated successfully!');\n// //       setEditMedicine(null);\n// //     } else {\n// //       await axios.post('http://localhost:5000/medicines', newMedicine);\n// //       setMessage('Medicine added successfully!');\n// //     }\n// //     fetchMedicines();\n// //     setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n// //     setShowCreateForm(false); // Hide form after submission\n// //   };\n\n// //   const deleteMedicine = async (id) => {\n// //     await axios.delete(`http://localhost:5000/medicines/${id}`);\n// //     setMessage('Medicine deleted successfully!');\n// //     fetchMedicines();\n// //   };\n\n// //   const editMedicineForm = (medicine) => {\n// //     setNewMedicine(medicine);\n// //     setEditMedicine(medicine);\n// //     setShowCreateForm(true);  // Show the form in edit mode\n// //   };\n\n// //   // Function to handle adding a medicine to the cart\n// //   const addToCart = (medicine) => {\n// //     let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n// //     // Check if the item is already in the cart\n// //     const existingItem = cart.find(item => item.id === medicine.id);\n\n// //     if (existingItem) {\n// //       // If already exists, increase the quantity\n// //       existingItem.quantity += 1;\n// //     } else {\n// //       // Add new item with a quantity of 1\n// //       cart.push({ ...medicine, quantity: 1 });\n// //     }\n\n// //     localStorage.setItem('cart', JSON.stringify(cart));\n// //     setCartItems(cart);\n// //     setMessage('Medicine added to cart');\n// //   };\n\n// //   // Toggle the create medicine form\n// //   const toggleCreateForm = () => {\n// //     setShowCreateForm(!showCreateForm);\n// //     setEditMedicine(null); // Reset the form for creating a new medicine\n// //   };\n\n// //   // Toggle the Sign Up form\n// //   const toggleSignUpForm = () => {\n// //     setShowSignUp(!showSignUp);\n// //   };\n\n// //   // Toggle the Login form\n// //   const toggleLoginForm = () => {\n// //     setShowLogin(!showLogin);\n// //   };\n\n// //   return (\n// //     <Router>\n// //       <div>\n// //         <nav className=\"navbar\">\n// //           <h1>Herbal Remedy System</h1>\n// //           <div className=\"navbar-links\">\n// //             <Link to=\"/\">Home</Link>\n// //             <Link to=\"/about\">About</Link>\n// //             <Link to=\"/contact\">Contact</Link>\n// //             <button onClick={toggleSignUpForm}>Sign Up</button>\n// //             <button onClick={toggleLoginForm}>Login</button>\n// //           </div>\n// //         </nav>\n\n// //         <Routes>\n// //           <Route\n// //             path=\"/\"\n// //             element={\n// //               <div className=\"container\">\n// //                 {message && <p>{message}</p>}\n\n// //                 {/* Toggle Create Medicine Button */}\n// //                 {isLoggedIn && (\n// //                   <button onClick={toggleCreateForm} className=\"create-btn\">\n// //                     <span>+</span> {/* Icon for Create */}\n// //                   </button>\n// //                 )}\n\n// //                 {/* Medicine Creation Form */}\n// //                 {showCreateForm && (\n// //                   <form onSubmit={addMedicine} className=\"medicine-form\">\n// //                     <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n// //                     <input\n// //                       type=\"text\"\n// //                       placeholder=\"Name\"\n// //                       value={newMedicine.name}\n// //                       onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n// //                       required\n// //                     />\n// //                     <input\n// //                       type=\"text\"\n// //                       placeholder=\"Image URL\"\n// //                       value={newMedicine.image_url}\n// //                       onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n// //                       required\n// //                     />\n// //                     <textarea\n// //                       placeholder=\"Description\"\n// //                       value={newMedicine.description}\n// //                       onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n// //                       required\n// //                     ></textarea>\n// //                     <input\n// //                       type=\"text\"\n// //                       placeholder=\"Prescription\"\n// //                       value={newMedicine.prescription}\n// //                       onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n// //                       required\n// //                     />\n// //                     <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n// //                   </form>\n// //                 )}\n\n// //                 {/* Medicines List and CRUD Operations */}\n// //                 {isLoggedIn && (\n// //                   <div className=\"medicine-list\">\n// //                     {medicines.map((medicine) => (\n// //                       <div key={medicine.id} className=\"medicine-card\">\n// //                         <h2>{medicine.name}</h2>\n// //                         <img src={medicine.image_url} alt={medicine.name} />\n// //                         <p>{medicine.description}</p>\n// //                         <p>\n// //                           <strong>Prescription:</strong> {medicine.prescription}\n// //                         </p>\n// //                         <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n// //                         <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n// //                         <button onClick={() => addToCart(medicine)}>Add to Cart</button>\n// //                       </div>\n// //                     ))}\n// //                   </div>\n// //                 )}\n\n// //                 {/* Sign Up Form */}\n// //                 {showSignUp && (\n// //                   <form onSubmit={signup} className=\"auth-form\">\n// //                     <h2>Sign Up</h2>\n// //                     <input\n// //                       type=\"text\"\n// //                       placeholder=\"Username\"\n// //                       value={username}\n// //                       onChange={(e) => setUsername(e.target.value)}\n// //                       required\n// //                     />\n// //                     <input\n// //                       type=\"password\"\n// //                       placeholder=\"Password\"\n// //                       value={password}\n// //                       onChange={(e) => setPassword(e.target.value)}\n// //                       required\n// //                     />\n// //                     <button type=\"submit\">Sign Up</button>\n// //                   </form>\n// //                 )}\n\n// //                 {/* Login Form */}\n// //                 {showLogin && (\n// //                   <form onSubmit={login} className=\"auth-form\">\n// //                     <h2>Login</h2>\n// //                     <input\n// //                       type=\"text\"\n// //                       placeholder=\"Username\"\n// //                       value={username}\n// //                       onChange={(e) => setUsername(e.target.value)}\n// //                       required\n// //                     />\n// //                     <input\n// //                       type=\"password\"\n// //                       placeholder=\"Password\"\n// //                       value={password}\n// //                       onChange={(e) => setPassword(e.target.value)}\n// //                       required\n// //                     />\n// //                     <button type=\"submit\">Login</button>\n// //                   </form>\n// //                 )}\n// //               </div>\n// //             }\n// //           />\n\n// //           <Route path=\"/about\" element={<About />} />\n// //           <Route path=\"/contact\" element={<Contact />} />\n// //         </Routes>\n\n// //         <Footer />\n// //       </div>\n// //     </Router>\n// //   );\n// // }\n\n// // export default App;\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\n// import './App.css';\n\n// // About Page Component\n// function About() {\n//   return (\n//     <div>\n//       <h2>About Herbal Remedy System</h2>\n//       <p>We provide the best herbal remedies for various ailments. All our medicines are natural and carefully sourced.</p>\n//     </div>\n//   );\n// }\n\n// // Contact Page Component\n// function Contact() {\n//   return (\n//     <div className=\"contact-page\">\n//       <h2>Contact Us</h2>\n//       <p>Email: info@herbalremedysystem.com</p>\n//       <p>Phone: +123 456 7890</p>\n      \n//       <h3>Follow Us</h3>\n//       <div className=\"social-media-links\">\n//         <a href=\"https://facebook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n//           <img src=\"path/to/facebook-icon.png\" alt=\"Facebook\" />\n//         </a>\n//         <a href=\"https://twitter.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n//           <img src=\"path/to/twitter-icon.png\" alt=\"Twitter\" />\n//         </a>\n//         <a href=\"https://instagram.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n//           <img src=\"path/to/instagram-icon.png\" alt=\"Instagram\" />\n//         </a>\n//         <a href=\"https://linkedin.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n//           <img src=\"path/to/linkedin-icon.png\" alt=\"LinkedIn\" />\n//         </a>\n//       </div>\n//     </div>\n//   );\n// }\n\n// // Footer Component\n// function Footer() {\n//   return (\n//     <footer>\n//       <p>&copy; 2024 Herbal Remedy System. All rights reserved.</p>\n//     </footer>\n//   );\n// }\n\n// // Main App Component\n// function App() {\n//   const [username, setUsername] = useState(''); // For Sign Up and Login\n//   const [password, setPassword] = useState(''); // For Sign Up and Login\n//   const [message, setMessage] = useState('');\n//   const [medicines, setMedicines] = useState([]);\n//   const [newMedicine, setNewMedicine] = useState({ name: '', image_url: '', description: '', prescription: '' });\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [editMedicine, setEditMedicine] = useState(null);\n//   const [cartItems, setCartItems] = useState([]); // Updated to store cart items\n\n//   // State for Sign Up and Login forms\n//   const [showSignUp, setShowSignUp] = useState(false);\n//   const [showLogin, setShowLogin] = useState(false);\n\n//   // State to toggle the Create Medicine form\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n\n//   useEffect(() => {\n//     fetchMedicines();\n//     // Fetch cart items from localStorage on load\n//     loadCartFromLocalStorage();\n//   }, []);\n\n//   const fetchMedicines = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/medicines');\n//       setMedicines(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const loadCartFromLocalStorage = () => {\n//     const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n//     setCartItems(savedCart);\n//   };\n\n//   const signup = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/signup', { username, password });\n//       setMessage('User created successfully');\n//       setShowSignUp(false); // Hide the sign-up form after successful sign-up\n//     } catch (error) {\n//       setMessage('Error creating user');\n//     }\n//   };\n\n//   const login = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/login', { username, password });\n//       setMessage('Logged in successfully');\n//       setIsLoggedIn(true);\n//       setShowLogin(false); // Hide the login form after successful login\n//     } catch (error) {\n//       setMessage('Invalid credentials');\n//     }\n//   };\n\n//   const addMedicine = async (e) => {\n//     e.preventDefault();\n//     if (editMedicine) {\n//       await axios.put(`http://localhost:5000/medicines/${editMedicine.id}`, newMedicine);\n//       setMessage('Medicine updated successfully!');\n//       setEditMedicine(null);\n//     } else {\n//       await axios.post('http://localhost:5000/medicines', newMedicine);\n//       setMessage('Medicine added successfully!');\n//     }\n//     fetchMedicines();\n//     setNewMedicine({ name: '', image_url: '', description: '', prescription: '' });\n//     setShowCreateForm(false); // Hide form after submission\n//   };\n\n//   const deleteMedicine = async (id) => {\n//     await axios.delete(`http://localhost:5000/medicines/${id}`);\n//     setMessage('Medicine deleted successfully!');\n//     fetchMedicines();\n//   };\n\n//   const editMedicineForm = (medicine) => {\n//     setNewMedicine(medicine);\n//     setEditMedicine(medicine);\n//     setShowCreateForm(true);  // Show the form in edit mode\n//   };\n\n//   // Function to handle adding a medicine to the cart\n//   const addToCart = (medicine) => {\n//     let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n//     // Check if the item is already in the cart\n//     const existingItem = cart.find(item => item.id === medicine.id);\n\n//     if (existingItem) {\n//       // If already exists, increase the quantity\n//       existingItem.quantity += 1;\n//     } else {\n//       // Add new item with a quantity of 1\n//       cart.push({ ...medicine, quantity: 1 });\n//     }\n\n//     localStorage.setItem('cart', JSON.stringify(cart));\n//     setCartItems(cart);\n//     setMessage('Medicine added to cart');\n//   };\n\n//   // Toggle the create medicine form\n//   const toggleCreateForm = () => {\n//     setShowCreateForm(!showCreateForm);\n//     setEditMedicine(null); // Reset the form for creating a new medicine\n//   };\n\n//   // Toggle the Sign Up form\n//   const toggleSignUpForm = () => {\n//     setShowSignUp(!showSignUp);\n//   };\n\n//   // Toggle the Login form\n//   const toggleLoginForm = () => {\n//     setShowLogin(!showLogin);\n//   };\n\n//   return (\n//     <Router>\n//       <div>\n//         <nav className=\"navbar\">\n//           <h1>Herbal Remedy System</h1>\n//           <div className=\"navbar-links\">\n//             <Link to=\"/\">Home</Link>\n//             <Link to=\"/about\">About</Link>\n//             <Link to=\"/contact\">Contact</Link>\n//             <button onClick={toggleSignUpForm}>Sign Up</button>\n//             <button onClick={toggleLoginForm}>Login</button>\n//           </div>\n//         </nav>\n\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <div className=\"container\">\n//                 {message && <p>{message}</p>}\n\n//                 {/* Toggle Create Medicine Button */}\n//                 {isLoggedIn && (\n//                   <button onClick={toggleCreateForm} className=\"create-btn\">\n//                     <span>+</span> {/* Icon for Create */}\n//                   </button>\n//                 )}\n\n//                 {/* Medicine Creation Form */}\n//                 {showCreateForm && (\n//                   <form onSubmit={addMedicine} className=\"medicine-form\">\n//                     <h2>{editMedicine ? 'Edit Medicine' : 'Create Medicine'}</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Name\"\n//                       value={newMedicine.name}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })}\n//                       required\n//                     />\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Image URL\"\n//                       value={newMedicine.image_url}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, image_url: e.target.value })}\n//                       required\n//                     />\n//                     <textarea\n//                       placeholder=\"Description\"\n//                       value={newMedicine.description}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, description: e.target.value })}\n//                       required\n//                     ></textarea>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Prescription\"\n//                       value={newMedicine.prescription}\n//                       onChange={(e) => setNewMedicine({ ...newMedicine, prescription: e.target.value })}\n//                       required\n//                     />\n//                     <button type=\"submit\">{editMedicine ? 'Update' : 'Add'} Herbs</button>\n//                   </form>\n//                 )}\n\n//                 {/* Medicines List and CRUD Operations */}\n//                 {isLoggedIn && (\n//                   <div className=\"medicine-list\">\n//                     {medicines.map((medicine) => (\n//                       <div key={medicine.id} className=\"medicine-card\">\n//                         <h2>{medicine.name}</h2>\n//                         <img src={medicine.image_url} alt={medicine.name} />\n//                         <p>{medicine.description}</p>\n//                         <p>\n//                           <strong>Prescription:</strong> {medicine.prescription}\n//                         </p>\n//                         <button onClick={() => editMedicineForm(medicine)}>Edit</button>\n//                         <button onClick={() => deleteMedicine(medicine.id)}>Delete</button>\n//                         <button onClick={() => addToCart(medicine)}>add to favorite</button>\n//                       </div>\n//                     ))}\n//                   </div>\n//                 )}\n\n//                 {/* Sign Up Form */}\n//                 {showSignUp && (\n//                   <form onSubmit={signup} className=\"auth-form\">\n//                     <h2>Sign Up</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Username\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                     />\n//                     <input\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                     />\n//                     <button type=\"submit\">Sign Up</button>\n//                   </form>\n//                 )}\n\n//                 {/* Login Form */}\n//                 {showLogin && (\n//                   <form onSubmit={login} className=\"auth-form\">\n//                     <h2>Login</h2>\n//                     <input\n//                       type=\"text\"\n//                       placeholder=\"Username\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                     />\n//                     <input\n//                       type=\"password\"\n//                       placeholder=\"Password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                     />\n//                     <button type=\"submit\">Login</button>\n//                   </form>\n//                 )}\n//               </div>\n//             }\n//           />\n//           <Route path=\"/about\" element={<About />} />\n//           <Route path=\"/contact\" element={<Contact />} />\n//         </Routes>\n\n//         <Footer />\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}